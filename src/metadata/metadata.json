{
  "package": "SteamWeb",
  "tagline": "SteamWeb API",
  "description": "SteamWeb",
  "image": "http:\/\/logo.clearbit.com\/steampowered.com",
  "repo": "https:\/\/github.com\/RapidSoftwareSolutions\/Marketplace-SteamWeb-Package",
  "keywords": [
  ],
  "accounts": {
    "domain": "steampowered.com",
    "credentials": [
      "apiKey"
    ]
  },
  "blocks": [
    {
      "name": "getNewsForApp",
      "description": "Returns the latest news of a game specified by its appId.",
      "args": [
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the game you want the news of",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0002 in this method",
          "required": false
        },
        {
          "name": "count",
          "type": "Number",
          "info": "How many news entries you want to get returned.",
          "required": false
        },
        {
          "name": "maxLength",
          "type": "Number",
          "info": "Maximum length of each news entry.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGlobalAchievementPercentagesForApp",
      "description": "Returns on global achievements overview of a specific game in percentages.",
      "args": [
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the game you want the percentage of",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0002 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGlobalStatsForGame",
      "description": "Returns the global stats of a game specified by its appId.",
      "args": [
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the game you want the news of",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "count",
          "type": "Number",
          "info": "Length of the array of global stat names you will be passing.",
          "required": true
        },
        {
          "name": "achievementNames",
          "type": "List",
          "info": "Name of the achievement as defined in Steamworks.",
          "required": true,
          "structure": {
            "name": "achievementName",
            "type": "String",
            "info": "Name of achievement"
          }
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPlayerSummaries",
      "description": "Returns basic profile information for a list of 64-bit Steam IDs.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamIds",
          "type": "List",
          "info": "Array of 64 bit Steam IDs to return profile information for. Up to 100 Steam IDs can be requested.",
          "required": true,
          "structure": {
            "name": "steamId",
            "type": "String",
            "info": "Steam Id"
          }
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0002 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getFriendList",
      "description": "Returns the friend list of any Steam user, provided his Steam Community profile visibility is set to \"Public\".",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "64 bit Steam ID to return friend list for.",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "relationship",
          "type": "Select",
          "options": ["all", "friend"],
          "info": "Relationship filter. Possibles values: all, friend.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPlayerAchievements",
      "description": "Returns a list of achievements for this user by app id",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "64 bit Steam ID to return friend list for.",
          "required": true
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "The ID for the game you're requesting",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "language",
          "type": "String",
          "info": "Language. If specified, it will return language data for the requested language.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserStatsForGame",
      "description": "Returns a list of achievements for this user by app id",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "64 bit Steam ID to return friend list for.",
          "required": true
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "The ID for the game you're requesting",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "language",
          "type": "String",
          "info": "Language. If specified, it will return language data for the requested language.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOwnedGames",
      "description": "GetOwnedGames returns a list of games a player owns along with some playtime information, if the profile is publicly visible. ",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "64 bit Steam ID to return game list for.",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "includeAppinfo",
          "type": "Boolean",
          "info": "Include game name and logo information in the output. The default is to return appids only.",
          "required": false
        },
        {
          "name": "includePlayedFreeGames",
          "type": "Boolean",
          "info": "By default, free games like Team Fortress 2 are excluded (as technically everyone owns them).",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRecentlyPlayedGames",
      "description": "GetOwnedGames returns a list of games a player owns along with some playtime information, if the profile is publicly visible. ",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "64 bit Steam ID to return played games list for.",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "count",
          "type": "Number",
          "info": "Optionally limit to a certain number of games (the number of games a person has played in the last 2 weeks is typically very small) format",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "isPlayingSharedGame",
      "description": "IsPlayingSharedGame returns the original owner's SteamID if a borrowing account is currently playing this game. If the game is not borrowed or the borrower currently doesn't play this game, the result is always 0.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamId",
          "type": "String",
          "info": "The SteamID of the account playing.",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v0001 in this method",
          "required": false
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "The AppID of the game currently playing",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSchemaForGame",
      "description": "GetSchemaForGame returns game name, gamev ersion and available game stats(achievements and stats).",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "The ID for the game you're requesting",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v2 in this method",
          "required": false
        },
        {
          "name": "language",
          "type": "String",
          "info": "Language. If specified, it will return language data for the requested language.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPlayerBans",
      "description": "GetPlayerBans returns Community, VAC, and Economy ban statuses for given players.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "steamIds",
          "type": "List",
          "info": "The SteamIDs of the account playing.",
          "required": true,
          "structure": {
            "name": "steamId",
            "type": "String",
            "info": "Steam Id"
          }
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v1 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAppList",
      "description": "Get full list of apps",
      "args": [
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v2 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getServersAtAddress",
      "description": "Get full list of apps",
      "args": [
        {
          "name": "serverAddress",
          "type": "String",
          "info": "Server address",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v1 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "upToDateCheck",
      "description": "Check your server app version",
      "args": [
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the app",
          "required": true
        },
        {
          "name": "appVersion",
          "type": "Number",
          "info": "Version of the app",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v1 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getNumberOfCurrentPlayers",
      "description": "Count number of current players for the app",
      "args": [
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the app",
          "required": true
        },
        {
          "name": "version",
          "type": "String",
          "info": "Version of the API, default v1 in this method",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAssetClassInfo",
      "description": "Get asset metadata for the assets in game",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the app",
          "required": true
        },
        {
          "name": "classCount",
          "type": "Number",
          "info": "The number of classids passed to the request",
          "required": true
        },
        {
          "name": "classIds",
          "type": "List",
          "info": "Series of sequential numbers to form a list of class IDs",
          "required": true,
          "structure": {
            "name": "classId",
            "type": "String",
            "info": "Id of class"
          }
        },
        {
          "name": "instanceIds",
          "type": "List",
          "info": "Instance ID of the nth class.",
          "required": false,
          "structure": {
            "name": "instanceId",
            "type": "String",
            "info": "Id of instance"
          }
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAssetPrices",
      "description": "Get prices of items in the economy in game",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "Your api key from Steam",
          "required": true
        },
        {
          "name": "appId",
          "type": "Number",
          "info": "Id of the app",
          "required": true
        },
        {
          "name": "language",
          "type": "String",
          "info": "The ISO639-1 language code for the language all localized strings should be returned in. Not all strings have been translated to every language. If a language does not have a string, the English string will be returned instead. If this parameter is omitted the string token will be returned for the strings.",
          "required": false
        },
        {
          "name": "currency",
          "type": "String",
          "info": "The ISO 4217 code for currency specific filtering.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    }
  ]
}